version: '3.8'

services:
  paincare-ai-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - FIREBASE_SERVICE_ACCOUNT_PATH=/app/firebase-service-account.json
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG_MODE=false
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
      - ./models:/app/models
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - paincare-network

  paincare-management:
    build:
      context: .
      dockerfile: Dockerfile.management
    ports:
      - "5000:5000"
    environment:
      - FIREBASE_SERVICE_ACCOUNT_PATH=/app/firebase-service-account.json
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG_MODE=false
    volumes:
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
      - ./models:/app/models
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For system monitoring
    restart: unless-stopped
    depends_on:
      - paincare-ai-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/system/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - paincare-network

  nginx-reverse-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - paincare-ai-api
      - paincare-management
    restart: unless-stopped
    networks:
      - paincare-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - paincare-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - paincare-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  paincare-network:
    driver: bridge